module bit_shifter(data_out,data_in,clk,rst );
input [7:0]data_in;
output[63:0]data_out;
input clk,rst;
wire [7:0]r1,r2,r3,r4,r5,r6,r7,r8;
shift_reg8 sf1(r1,data_in[0],clk,rst);             //Call 8 bit shift register
shift_reg8 sf2(r2,data_in[1],clk,rst);            //Call 8 bit shift register
shift_reg8 sf3(r3,data_in[2],clk,rst);            //Call 8 bit shift register
shift_reg8 sf4(r4,data_in[3],clk,rst);            //Call 8 bit shift register
shift_reg8 sf5(r5,data_in[4],clk,rst);            //Call 8 bit shift register
shift_reg8 sf6(r6,data_in[5],clk,rst);            //Call 8 bit shift register
shift_reg8 sf7(r7,data_in[6],clk,rst);            //Call 8 bit shift register
shift_reg8 sf8(r8,data_in[7],clk,rst);            //Call 8 bit shift register
assign data_out[7:0]={{r8[0]},{r7[0]},{r6[0]},{r5[0]},{r4[0]},{r3[0]},{r2[0]},{r1[0]}};
assign data_out[15:8]={{r8[1]},{r7[1]},{r6[1]},{r5[1]},{r4[1]},{r3[1]},{r2[1]},{r1[1]}};
assign data_out[23:16]={{r8[2]},{r7[2]},{r6[2]},{r5[2]},{r4[2]},{r3[2]},{r2[2]},{r1[2]}};
assign data_out[31:24]={{r8[3]},{r7[3]},{r6[3]},{r5[3]},{r4[3]},{r3[3]},{r2[3]},{r1[3]}};
assign data_out[39:32]={{r8[4]},{r7[4]},{r6[4]},{r5[4]},{r4[4]},{r3[4]},{r2[4]},{r1[4]}};
assign data_out[47:40]={{r8[5]},{r7[5]},{r6[5]},{r5[5]},{r4[5]},{r3[5]},{r2[5]},{r1[5]}};
assign data_out[55:48]={{r8[6]},{r7[6]},{r6[6]},{r5[6]},{r4[6]},{r3[6]},{r2[6]},{r1[6]}};
assign data_out[63:56]={{r8[7]},{r7[7]},{r6[7]},{r5[7]},{r4[7]},{r3[7]},{r2[7]},{r1[7]}};
Endmodule
